-- lazy.nvim
return {
  "robitx/gp.nvim",
  config = function()
    require("gp").setup()
    -- VISUAL mode mappings
    -- s, x, v modes are handled the same way by which_key
    -- require("which-key").add({
    --   {
    --     {
    --       mode = { "v" },
    --       {
    --         "<C-g><C-t>",
    --         ":<C-u>'<,'>GpChatNew tabnew<cr>",
    --         desc = "Visual Chat New tabnew",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g><C-v>",
    --         ":<C-u>'<,'>GpChatNew vsplit<cr>",
    --         desc = "Visual Chat New vsplit",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g><C-x>",
    --         ":<C-u>'<,'>GpChatNew split<cr>",
    --         desc = "Visual Chat New split",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>a",
    --         ":<C-u>'<,'>GpAppend<cr>",
    --         desc = "Visual Append (after)",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>b",
    --         ":<C-u>'<,'>GpPrepend<cr>",
    --         desc = "Visual Prepend (before)",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>c",
    --         ":<C-u>'<,'>GpChatNew<cr>",
    --         desc = "Visual Chat New",
    --         nowait = true,
    --         remap = false,
    --       },
    --       { "<C-g>g", group = "generate into new ..", nowait = true,       remap = false },
    --       {
    --         "<C-g>ge",
    --         ":<C-u>'<,'>GpEnew<cr>",
    --         desc = "Visual GpEnew",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>gn",
    --         ":<C-u>'<,'>GpNew<cr>",
    --         desc = "Visual GpNew",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>gp",
    --         ":<C-u>'<,'>GpPopup<cr>",
    --         desc = "Visual Popup",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>gt",
    --         ":<C-u>'<,'>GpTabnew<cr>",
    --         desc = "Visual GpTabnew",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>gv",
    --         ":<C-u>'<,'>GpVnew<cr>",
    --         desc = "Visual GpVnew",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>i",
    --         ":<C-u>'<,'>GpImplement<cr>",
    --         desc = "Implement selection",
    --         nowait = true,
    --         remap = false,
    --       },
    --       { "<C-g>n", "<cmd>GpNextAgent<cr>",         desc = "Next Agent", nowait = true, remap = false },
    --       {
    --         "<C-g>p",
    --         ":<C-u>'<,'>GpChatPaste<cr>",
    --         desc = "Visual Chat Paste",
    --         nowait = true,
    --         remap = false,
    --       },
    --       { "<C-g>r", ":<C-u>'<,'>GpRewrite<cr>", desc = "Visual Rewrite", nowait = true, remap = false },
    --       { "<C-g>s", "<cmd>GpStop<cr>",          desc = "GpStop",         nowait = true, remap = false },
    --       {
    --         "<C-g>t",
    --         ":<C-u>'<,'>GpChatToggle<cr>",
    --         desc = "Visual Toggle Chat",
    --         nowait = true,
    --         remap = false,
    --       },
    --       { "<C-g>w",  group = "Whisper",              nowait = true,         remap = false },
    --       {
    --         "<C-g>wa",
    --         ":<C-u>'<,'>GpWhisperAppend<cr>",
    --         desc = "Whisper Append (after)",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>wb",
    --         ":<C-u>'<,'>GpWhisperPrepend<cr>",
    --         desc = "Whisper Prepend (before)",
    --         nowait = true,
    --         remap = false,
    --       },
    --       { "<C-g>we", ":<C-u>'<,'>GpWhisperEnew<cr>", desc = "Whisper Enew", nowait = true, remap = false },
    --       { "<C-g>wn", ":<C-u>'<,'>GpWhisperNew<cr>",  desc = "Whisper New",  nowait = true, remap = false },
    --       {
    --         "<C-g>wp",
    --         ":<C-u>'<,'>GpWhisperPopup<cr>",
    --         desc = "Whisper Popup",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>wr",
    --         ":<C-u>'<,'>GpWhisperRewrite<cr>",
    --         desc = "Whisper Rewrite",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>wt",
    --         ":<C-u>'<,'>GpWhisperTabnew<cr>",
    --         desc = "Whisper Tabnew",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>wv",
    --         ":<C-u>'<,'>GpWhisperVnew<cr>",
    --         desc = "Whisper Vnew",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>ww",
    --         ":<C-u>'<,'>GpWhisper<cr>",
    --         desc = "Whisper",
    --         nowait = true,
    --         remap = false,
    --       },
    --       {
    --         "<C-g>x",
    --         ":<C-u>'<,'>GpContext<cr>",
    --         desc = "Visual GpContext",
    --         nowait = true,
    --         remap = false,
    --       },
    --     },
    --   },
    --   -- ...
    -- }, {
    --   mode = "v", -- VISUAL mode
    --   prefix = "",
    --   buffer = nil,
    --   silent = true,
    --   noremap = true,
    --   nowait = true,
    -- })
    --
    -- -- NORMAL mode mappings
    -- require("which-key").add({
    --   -- ...
    --   ["<C-g>"] = {
    --     c = { "<cmd>GpChatNew<cr>", "New Chat" },
    --     t = { "<cmd>GpChatToggle<cr>", "Toggle Chat" },
    --     f = { "<cmd>GpChatFinder<cr>", "Chat Finder" },
    --
    --     ["<C-x>"] = { "<cmd>GpChatNew split<cr>", "New Chat split" },
    --     ["<C-v>"] = { "<cmd>GpChatNew vsplit<cr>", "New Chat vsplit" },
    --     ["<C-t>"] = { "<cmd>GpChatNew tabnew<cr>", "New Chat tabnew" },
    --
    --     r = { "<cmd>GpRewrite<cr>", "Inline Rewrite" },
    --     a = { "<cmd>GpAppend<cr>", "Append (after)" },
    --     b = { "<cmd>GpPrepend<cr>", "Prepend (before)" },
    --
    --     g = {
    --       name = "generate into new ..",
    --       p = { "<cmd>GpPopup<cr>", "Popup" },
    --       e = { "<cmd>GpEnew<cr>", "GpEnew" },
    --       n = { "<cmd>GpNew<cr>", "GpNew" },
    --       v = { "<cmd>GpVnew<cr>", "GpVnew" },
    --       t = { "<cmd>GpTabnew<cr>", "GpTabnew" },
    --     },
    --
    --     n = { "<cmd>GpNextAgent<cr>", "Next Agent" },
    --     s = { "<cmd>GpStop<cr>", "GpStop" },
    --     x = { "<cmd>GpContext<cr>", "Toggle GpContext" },
    --
    --     w = {
    --       name = "Whisper",
    --       w = { "<cmd>GpWhisper<cr>", "Whisper" },
    --       r = { "<cmd>GpWhisperRewrite<cr>", "Whisper Inline Rewrite" },
    --       a = { "<cmd>GpWhisperAppend<cr>", "Whisper Append (after)" },
    --       b = { "<cmd>GpWhisperPrepend<cr>", "Whisper Prepend (before)" },
    --       p = { "<cmd>GpWhisperPopup<cr>", "Whisper Popup" },
    --       e = { "<cmd>GpWhisperEnew<cr>", "Whisper Enew" },
    --       n = { "<cmd>GpWhisperNew<cr>", "Whisper New" },
    --       v = { "<cmd>GpWhisperVnew<cr>", "Whisper Vnew" },
    --       t = { "<cmd>GpWhisperTabnew<cr>", "Whisper Tabnew" },
    --     },
    --   },
    --   -- ...
    -- }, {
    --   mode = "n", -- NORMAL mode
    --   prefix = "",
    --   buffer = nil,
    --   silent = true,
    --   noremap = true,
    --   nowait = true,
    -- })
    --
    -- INSERT mode mappings
    -- require("which-key").add({
    --   -- ...
    --   ["<C-g>"] = {
    --     c = { "<cmd>GpChatNew<cr>", "New Chat" },
    --     t = { "<cmd>GpChatToggle<cr>", "Toggle Chat" },
    --     f = { "<cmd>GpChatFinder<cr>", "Chat Finder" },
    --
    --     ["<C-x>"] = { "<cmd>GpChatNew split<cr>", "New Chat split" },
    --     ["<C-v>"] = { "<cmd>GpChatNew vsplit<cr>", "New Chat vsplit" },
    --     ["<C-t>"] = { "<cmd>GpChatNew tabnew<cr>", "New Chat tabnew" },
    --
    --     r = { "<cmd>GpRewrite<cr>", "Inline Rewrite" },
    --     a = { "<cmd>GpAppend<cr>", "Append (after)" },
    --     b = { "<cmd>GpPrepend<cr>", "Prepend (before)" },
    --
    --     g = {
    --       name = "generate into new ..",
    --       p = { "<cmd>GpPopup<cr>", "Popup" },
    --       e = { "<cmd>GpEnew<cr>", "GpEnew" },
    --       n = { "<cmd>GpNew<cr>", "GpNew" },
    --       v = { "<cmd>GpVnew<cr>", "GpVnew" },
    --       t = { "<cmd>GpTabnew<cr>", "GpTabnew" },
    --     },
    --
    --     x = { "<cmd>GpContext<cr>", "Toggle GpContext" },
    --     s = { "<cmd>GpStop<cr>", "GpStop" },
    --     n = { "<cmd>GpNextAgent<cr>", "Next Agent" },
    --
    --     w = {
    --       name = "Whisper",
    --       w = { "<cmd>GpWhisper<cr>", "Whisper" },
    --       r = { "<cmd>GpWhisperRewrite<cr>", "Whisper Inline Rewrite" },
    --       a = { "<cmd>GpWhisperAppend<cr>", "Whisper Append (after)" },
    --       b = { "<cmd>GpWhisperPrepend<cr>", "Whisper Prepend (before)" },
    --       p = { "<cmd>GpWhisperPopup<cr>", "Whisper Popup" },
    --       e = { "<cmd>GpWhisperEnew<cr>", "Whisper Enew" },
    --       n = { "<cmd>GpWhisperNew<cr>", "Whisper New" },
    --       v = { "<cmd>GpWhisperVnew<cr>", "Whisper Vnew" },
    --       t = { "<cmd>GpWhisperTabnew<cr>", "Whisper Tabnew" },
    --     },
    --   },
    --   -- ...
    -- }, {
    --   mode = "i", -- INSERT mode
    --   prefix = "",
    --   buffer = nil,
    --   silent = true,
    --   noremap = true,
    --   nowait = true,
    -- })
    -- or setup with your own config (see Install > Configuration in Readme)
    -- require("gp").setup(config)

    -- shortcuts might be setup here (see Usage > Shortcuts in Readme)
  end,
}
